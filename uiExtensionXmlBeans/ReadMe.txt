/**
 * Author: Bharadwaj
 * Date: 15/04/13
 * Time: 1:00 AM
 */

1) This jar and source has been generated using the scomp command of xmlbeans v2.6.0. Command -
    scomp -src java ./xml/uiApplicationExtension.xsd -out uiExtensionXmlBeans.jar

2) The jar generated by scomp is installed into maven using the below command. This artifact and version is
    referenced from "uiExtensionLib" as a dependency. Command -

    mvn install:install-file -Dfile=uiExtensionXmlBeans.jar -DgroupId=com.appnomic.appsone.dashboard -DartifactId=uiExtensionXmlBeans -Dversion=04.20.100.000 -Dpackaging=jar

3) The default dependency for xmlbeans classes in maven is -

        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans-xmlpublic</artifactId>
            <version>2.6.0</version>
        </dependency>

    However, the JAR downloaded by having this dependency from public repositories was not sufficient to
    compile and run the 'generated' source code. What was required was to use the exact same JAR as packaged
    in the downloaded and 'externally' installed Apache XmlBeans 2.6.0. So, I had to rename this JAR -

    ".m2/repository/org/apache/xmlbeans/xmlbeans-xmlpublic/2.6.0/xmlbeans-xmlpublic-2.6.0.jar"

    from external download (size: 440kb) to a temporary name and used the xbean.jar packaged with the downloaded
    version of XmlBeans (size: 2.7MB). Doing so got rid of all compilation and run-time problems

4) Have checked in both JAR and generated code in uiExtensionXmlBeans. Do NOT manually touch or modify
    this code - doing so is of NO use since the JAR is built by scomp and NOT by compiling the source code


5) The generated source code needs to kept up to date with any modifications to XSD by regenerating the
    source. The XSD and XmlBean code should NEVER go out of sync


6) Pay attention to the namespace and prefix to complex types in the XSD. Keeping this clean is essential for
    clean generation of Bean code

